{
  "hash": "ce769271a11442bd3238f4134fe7fc1a",
  "result": {
    "markdown": "---\ntitle: 'Benchmarking the mle and mle2 function '\ndate: '2018-12-29'\ncategories:\n  - bbmle\n  - fitODBOD\n  - mle\n  - mle2\n  - R\nimage: featured.png\ndraft: false\nnumber-sections: false\nformat:\n  html:\n    fig-cap-location: bottom\nresources: \n  - \"featured.png\"\n---\n\n\n**NOTE : Below post is valid for Package version 1.4.0 and Before. **\n\n# Introduction\n\n[mle](https://www.rdocumentation.org/packages/stats4/versions/3.5.1/topics/mle) and [mle2](https://www.rdocumentation.org/packages/bbmle/versions/1.0.20/topics/mle2) \nare my favorite functions, because they provide extensive amount of outputs\nfor the optimization process. Even though there is no difference in analytical methods \nused in both of these functions. Further, these analytical methods are the same ones used\nby optim function. To be honest mle and mle2 functions are wrapper functions of optim. It means\nboth mle and mle2 are using the optim function inside but with some additional inputs, which\nwould generate extended outputs.\n\nEven if I do Benchmark the analytical methods for the mle function it would be very similar to\noptim function tables but with additional time taken, because of the extra outputs. This would \nsimilarly occur when we benchmark analytical methods from the mle2 function as well. \n\nTherefore, I figure why do we need to benchmark them at all. So this blog post is to \nsimply reiterate the initial things which I said in my earlier post on the blog post\n[Benchmarking optimization functions in R](https://amalan-con-stat.netlify.com/post/fitodbod_1/benchmarking-maximum-liklihood-functions-from-r/).\n\n## mle\n\nmle function is from the [stats4](https://stat.ethz.ch/R-manual/R-devel/library/stats4/html/00Index.html) \npackage. If we intend to use this function for\nthe estimation of shape parameters a and b of the Beta-Binomial distribution wtih\nBinomial Outcome Data, then we need to use the EstMLEBetaBin function from the fitODBOD\npackage. This is not enough because for limitations in the mle we need to make changes \nin our EstMLEBetaBin function as mentioned below. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stats4)\nlibrary(fitODBOD)\n\n#new function to facilitate mle criteria \nformle<-function(a,b)\n{\n  EstMLEBetaBin(x=Alcohol_data$Days,freq = Alcohol_data$week1,a,b)\n}\n\n# optimizing values for a,b using default analytial method\nmle_answer<-mle(minuslogl = formle,start = list(a=0.1,b=0.2))\n```\n:::\n\n\nWe are going to use the Alcohol Consumption data of week 1. In the above code\nchunk we are using the mle function for our task of finding the optimum shape parameter\nvalues for a and b while using the given Binomial Outcome data. Also If you wish you\nstudy about the mle function by referring [this link](https://amalan-con-stat.netlify.com/post/fitodbod_1/benchmarking-maximum-liklihood-functions-from-r/#mle-function) \nfrom my previous post.\n\n## mle2\n\n[bbmle](https://cran.r-project.org/web/packages/bbmle/index.html) \npackage holds the mle2 function. It is simply an updated version for the mle function. \nAlthough there need to be no changes in the EstMLEBetaBin function to satisfy the mle2 \nfunction's criteria. Now it will be possible to use it. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bbmle)\n\n# optimizing values for a,b using default analytical method\nmle2_answer<-mle2(minuslogl= EstMLEBetaBin,start = list(a=0.1,b=0.2),\n                  data = list(x=Alcohol_data$Days,freq=Alcohol_data$week1))\n```\n:::\n\n\n\nStill if someone needs a brief introduction to mle2 function they can refer my\nprevious brief through [this link](https://amalan-con-stat.netlify.com/post/fitodbod_1/benchmarking-maximum-liklihood-functions-from-r/#mle2-function).\n\n# Conclusion\n\nMy personal opinion is to use the mle2 function, but moving towards what should be the analytical\nmethod. It would be wise to choose it based on your needs as these methods completely depend on \nthe data, function that needs to be estimated, complexity of the function and finally the number\nestimators that needs to be estimated. \n\nThis is the link to the article which is for \n[Benchmarking optim function](https://amalan-con-stat.netlify.com/post/optim/optim-estimating-the-shape-parameters-of-beta-binomial-distribution/).\nIt might be useful while understanding the analytical methods.\n\n*THANK YOU*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}